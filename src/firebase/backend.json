{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "User",
      "description": "Represents a user of the PHP Refactor Pro application.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity. The specific format and generation strategy depend on the target database implementation."
        },
        "username": {
          "type": "string",
          "description": "The username of the user."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email address of the user."
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "PhpFile": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "PhpFile",
      "description": "Represents a PHP file uploaded for refactoring.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PhpFile entity. The specific format and generation strategy depend on the target database implementation."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the user who uploaded the file. (Relationship: User 1:N PhpFile)"
        },
        "fileName": {
          "type": "string",
          "description": "The original name of the uploaded PHP file."
        },
        "fileContent": {
          "type": "string",
          "description": "The content of the uploaded PHP file."
        },
        "uploadTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the file was uploaded."
        }
      },
      "required": [
        "id",
        "userId",
        "fileName",
        "fileContent",
        "uploadTimestamp"
      ]
    },
    "RefactoringTask": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "RefactoringTask",
      "description": "Represents a refactoring task performed on a PHP file.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the RefactoringTask entity. The specific format and generation strategy depend on the target database implementation."
        },
        "phpFileId": {
          "type": "string",
          "description": "Reference to the unique identifier of the original PhpFile being refactored. (Relationship: PhpFile 1:N RefactoringTask)"
        },
        "refactoredCode": {
          "type": "string",
          "description": "The refactored PHP code."
        },
        "compatibilityReportId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reference to the unique identifier of the associated CompatibilityReport entity, if generated. (Relationship: RefactoringTask 1:1 CompatibilityReport)"
        },
        "refactoringTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the refactoring was performed."
        },
        "cloudStorageUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "The URL of the refactored file saved in Google Cloud Storage, if saved."
        }
      },
      "required": [
        "id",
        "phpFileId",
        "refactoredCode",
        "refactoringTimestamp"
      ]
    },
    "CompatibilityReport": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "CompatibilityReport",
      "description": "Represents a compatibility report generated after refactoring a PHP file.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CompatibilityReport entity. The specific format and generation strategy depend on the target database implementation."
        },
        "refactoringTaskId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related RefactoringTask entity. (Relationship: RefactoringTask 1:1 CompatibilityReport)"
        },
        "reportContent": {
          "type": "string",
          "description": "The content of the compatibility report, highlighting potential issues and changes made."
        },
        "generationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the report was generated."
        },
        "pdfUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "The URL of the PDF version of the report, if generated."
        },
        "cloudStorageUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "The URL of the compatibility report saved in Google Cloud Storage, if saved."
        }
      },
      "required": [
        "id",
        "refactoringTaskId",
        "reportContent",
        "generationTimestamp"
      ]
    },
    "CloudBucketScan": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "CloudBucketScan",
      "description": "Represents a scan of a Google Cloud Storage bucket for PHP files to refactor.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CloudBucketScan entity. The specific format and generation strategy depend on the target database implementation."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the user who initiated the bucket scan. (Relationship: User 1:N CloudBucketScan)"
        },
        "bucketName": {
          "type": "string",
          "description": "The name of the Google Cloud Storage bucket to scan."
        },
        "directoryPath": {
          "type": "string",
          "description": "The directory path within the bucket to scan. If null, the entire bucket is scanned."
        },
        "scanTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the bucket scan was initiated."
        },
        "phpFileIds": {
          "type": "array",
          "description": "Array of identifiers for PhpFile entities found during the bucket scan. (Relationship: CloudBucketScan 1:N PhpFile)",
          "items": {
            "type": "string",
            "description": "Reference to the unique identifier of a PhpFile entity found during the scan."
          }
        },
        "recursiveScan": {
          "type": "boolean",
          "description": "Whether the file should be recursivley scanned."
        }
      },
      "required": [
        "id",
        "userId",
        "bucketName",
        "scanTimestamp",
        "phpFileIds",
        "recursiveScan"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "definition": {
          "description": "Collection containing user profile documents.",
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "params": [
            {
              "description": "The unique ID of the user.",
              "name": "userId"
            }
          ]
        },
        "path": "/users/{userId}"
      },
      {
        "definition": {
          "description": "Collection containing PHP file documents.",
          "entityName": "PhpFile",
          "schema": {
            "$ref": "#/backend/entities/PhpFile"
          },
          "params": [
            {
              "description": "The unique ID of the PHP file.",
              "name": "phpFileId"
            }
          ]
        },
        "path": "/phpFiles/{phpFileId}"
      },
      {
        "definition": {
          "description": "Collection containing refactoring task documents.",
          "entityName": "RefactoringTask",
          "schema": {
            "$ref": "#/backend/entities/RefactoringTask"
          },
          "params": [
            {
              "description": "The unique ID of the refactoring task.",
              "name": "refactoringTaskId"
            }
          ]
        },
        "path": "/refactoringTasks/{refactoringTaskId}"
      },
      {
        "definition": {
          "description": "Collection containing compatibility report documents.",
          "entityName": "CompatibilityReport",
          "schema": {
            "$ref": "#/backend/entities/CompatibilityReport"
          },
          "params": [
            {
              "description": "The unique ID of the compatibility report.",
              "name": "compatibilityReportId"
            }
          ]
        },
        "path": "/compatibilityReports/{compatibilityReportId}"
      },
      {
        "definition": {
          "description": "Collection containing cloud bucket scan documents.",
          "entityName": "CloudBucketScan",
          "schema": {
            "$ref": "#/backend/entities/CloudBucketScan"
          },
          "params": [
            {
              "description": "The unique ID of the cloud bucket scan.",
              "name": "cloudBucketScanId"
            }
          ]
        },
        "path": "/cloudBucketScans/{cloudBucketScanId}"
      }
    ],
    "reasoning": "Based on the entities provided, the following Firestore collections are recommended:\n\n*   **users**: Stores user profile data. Document ID will be the user's unique ID.\n*   **phpFiles**: Stores PHP file metadata and content. Each document represents a file uploaded by a user.\n*   **refactoringTasks**: Stores information about each refactoring task performed on a PHP file.\n*   **compatibilityReports**: Stores compatibility reports generated after refactoring.\n*   **cloudBucketScans**: Stores metadata related to cloud bucket scans initiated by users.\n\nThe relationships between entities are maintained through document references within the respective collections, using the provided `userId`, `phpFileId`, `refactoringTaskId`, and `cloudBucketScanId` fields.  There will be no subcollections."
  }
}