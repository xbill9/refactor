{
  "entities": {
    "PhpFile": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "PhpFile",
      "description": "Represents a PHP file uploaded for refactoring (in-memory representation).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PhpFile entity."
        },
        "fileName": {
          "type": "string",
          "description": "The original name of the uploaded PHP file."
        },
        "fileContent": {
          "type": "string",
          "description": "The content of the uploaded PHP file."
        },
        "uploadTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the file was processed."
        }
      },
      "required": [
        "id",
        "fileName",
        "fileContent",
        "uploadTimestamp"
      ]
    },
    "RefactoringTask": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "RefactoringTask",
      "description": "Represents a refactoring task performed on a PHP file (in-memory representation).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the RefactoringTask entity."
        },
        "phpFileId": {
          "type": "string",
          "description": "Reference to the unique identifier of the original PhpFile."
        },
        "originalCode": {
          "type": "string",
          "description": "The original PHP code before refactoring."
        },
        "refactoredCode": {
          "type": "string",
          "description": "The refactored PHP code."
        },
        "compatibilityReportId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reference to the unique identifier of the associated CompatibilityReport entity, if generated."
        },
        "refactoringTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the refactoring was performed."
        },
        "cloudStorageUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "Mock URL for cloud storage."
        }
      },
      "required": [
        "id",
        "phpFileId",
        "originalCode",
        "refactoredCode",
        "refactoringTimestamp"
      ]
    },
    "CompatibilityReport": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "CompatibilityReport",
      "description": "Represents a compatibility report generated after refactoring a PHP file (in-memory representation).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CompatibilityReport entity."
        },
        "refactoringTaskId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related RefactoringTask entity."
        },
        "reportContent": {
          "type": "string",
          "description": "The content of the compatibility report, highlighting potential issues and changes made."
        },
        "generationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the report was generated."
        },
        "pdfUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "Mock URL for PDF report."
        },
        "cloudStorageUrl": {
          "type": [
            "string",
            "null"
          ],
          "description": "Mock URL for cloud storage."
        }
      },
      "required": [
        "id",
        "refactoringTaskId",
        "reportContent",
        "generationTimestamp"
      ]
    },
    "CloudBucketScan": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "CloudBucketScan",
      "description": "Represents a mock scan of a cloud bucket (in-memory representation).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CloudBucketScan entity."
        },
        "bucketName": {
          "type": "string",
          "description": "The name of the cloud bucket to scan."
        },
        "directoryPath": {
          "type": "string",
          "description": "The directory path within the bucket to scan. If null, the entire bucket is scanned."
        },
        "scanTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the bucket scan was initiated."
        },
        "phpFileIds": {
          "type": "array",
          "description": "Array of mock identifiers for PhpFile entities found during the bucket scan.",
          "items": {
            "type": "string",
            "description": "Mock identifier of a PhpFile entity found during the scan."
          }
        },
        "recursiveScan": {
          "type": "boolean",
          "description": "Whether the file should be recursively scanned."
        }
      },
      "required": [
        "id",
        "bucketName",
        "scanTimestamp",
        "phpFileIds",
        "recursiveScan"
      ]
    }
  },
  "auth": null,
  "firestore": null
}
